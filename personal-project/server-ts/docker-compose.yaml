version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: node_app
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - SECRET_TOKEN=${SECRET_TOKEN}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - "3001:3000"
    depends_on:
      - postgres
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - app-network
    command: ["./wait-for-it.sh", "postgres:5432", "--", "npm", "run", "start"]

  test:
    build: .
    container_name: node_test
    environment:
      - NODE_ENV=test
      - PORT=${PORT}
      - SECRET_TOKEN=${SECRET_TOKEN}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    env_file:
      - .env.test
    depends_on:
      - postgres
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - app-network
    command: ["./wait-for-it.sh", "postgres:5432", "--", "npm", "run", "test"]

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
